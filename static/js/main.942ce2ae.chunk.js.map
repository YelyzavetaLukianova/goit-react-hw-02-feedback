{"version":3,"sources":["components/SectionTitle/SectionTitle.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.jsx","App.js","index.js"],"names":["SectionTitle","className","FeedbackOptions","props","type","onClick","handleIncrement","id","Statistics","good","neutral","bad","countTotalFeedback","countPositiveFeedbackPercentage","App","state","e","target","setState","prevstate","result","Math","floor","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTAQeA,MARf,WACE,OACE,kCACE,oBAAIC,UAAU,qBAAd,4C,MCoCSC,MAnCf,SAAyBC,GACvB,OACE,0BAASF,UAAU,cAAnB,UACE,wBACEA,UAAU,SACVG,KAAK,SACLC,QAASF,EAAMG,gBACfC,GAAG,OAJL,kBAQA,wBACEN,UAAU,SACVG,KAAK,SACLC,QAASF,EAAMG,gBACfC,GAAG,UAJL,qBAQA,wBACEN,UAAU,SACVG,KAAK,SACLC,QAASF,EAAMG,gBACfC,GAAG,MAJL,qBCISC,MAxBf,SAAoBL,GAClB,OACE,gCACE,oBAAIF,UAAU,kBAAd,wBACA,gCACE,uBAAMA,UAAU,mBAAhB,kBAAyCE,EAAMM,QAC/C,uBAAMR,UAAU,mBAAhB,qBAA4CE,EAAMO,WAClD,uBAAMT,UAAU,mBAAhB,kBAAyCE,EAAMQ,UAGjD,wCAAWR,EAAMS,wBACjB,0CAAaT,EAAMU,yCCRnBC,E,4MACJC,MAAQ,CACNN,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPL,gBAAkB,SAACU,GACjB,IAAQT,EAAOS,EAAEC,OAATV,GACR,EAAKW,UAAS,SAACC,GAAD,sBAAmBZ,EAAKY,EAAUZ,GAAM,O,EAGxDK,mBAAqB,WACnB,MAA+B,EAAKG,MACpC,OADA,EAAQL,QAAR,EAAiBD,KAAjB,EAAuBE,K,EAIzBE,gCAAkC,WAChC,MAA+B,EAAKE,MAA5BL,EAAR,EAAQA,QAASD,EAAjB,EAAiBA,KAEXW,EAAiB,IAAPX,GADJC,EAAUD,EADtB,EAAuBE,KAGvB,OAAOS,EAASC,KAAKC,MAAMF,GAAU,W,4CAGvC,WACE,MAA+BG,KAAKR,MAApC,EAAQN,KAAR,EAAcC,QAAd,EAAuBC,IACvB,OACE,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAiBL,gBAAiBiB,KAAKjB,kBACvC,cAAC,EAAD,CACEM,mBAAoBW,KAAKX,mBACzBC,gCAAiCU,KAAKV,gCACtCJ,KAAMc,KAAKR,MAAMN,KACjBC,QAASa,KAAKR,MAAML,QACpBC,IAAKY,KAAKR,MAAMJ,a,GAnCRa,aA0CHV,IC3CfW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.942ce2ae.chunk.js","sourcesContent":["function SectionTitle() {\r\n  return (\r\n    <section>\r\n      <h1 className=\"Statistics__header\">Please, leave Your Feedback</h1>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default SectionTitle;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./FeedbackOptions.css\";\r\n\r\nfunction FeedbackOptions(props) {\r\n  return (\r\n    <section className=\"Button__div\">\r\n      <button\r\n        className=\"Button\"\r\n        type=\"button\"\r\n        onClick={props.handleIncrement}\r\n        id=\"good\"\r\n      >\r\n        Good\r\n      </button>\r\n      <button\r\n        className=\"Button\"\r\n        type=\"button\"\r\n        onClick={props.handleIncrement}\r\n        id=\"neutral\"\r\n      >\r\n        Neutral\r\n      </button>\r\n      <button\r\n        className=\"Button\"\r\n        type=\"button\"\r\n        onClick={props.handleIncrement}\r\n        id=\"bad\"\r\n      >\r\n        Bad\r\n      </button>\r\n    </section>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  handleIncrement: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Statistics(props) {\r\n  return (\r\n    <div>\r\n      <h2 className=\"Statistics__par\">Statistics</h2>\r\n      <div>\r\n        <span className=\"Statistics__span\">Good={props.good}</span>\r\n        <span className=\"Statistics__span\">Neutral={props.neutral}</span>\r\n        <span className=\"Statistics__span\">Bad ={props.bad}</span>\r\n      </div>\r\n\r\n      <h3>Total={props.countTotalFeedback()}</h3>\r\n      <p>Positive={props.countPositiveFeedbackPercentage()}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  countTotalFeedback: PropTypes.func.isRequired,\r\n  countPositiveFeedbackPercentage: PropTypes.func.isRequired,\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n};\r\n\r\nexport default Statistics;\r\n","import \"./App.css\";\nimport { Component } from \"react\";\nimport SectionTitle from \"./components/SectionTitle/SectionTitle.jsx\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions.jsx\";\nimport Statistics from \"./components/Statistics/Statistics.jsx\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleIncrement = (e) => {\n    const { id } = e.target;\n    this.setState((prevstate) => ({ [id]: prevstate[id] + 1 }));\n  };\n\n  countTotalFeedback = () => {\n    const { neutral, good, bad } = this.state;\n    return neutral + good + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { neutral, good, bad } = this.state;\n    const sum = neutral + good + bad;\n    const result = (good * 100) / sum;\n    return result ? Math.floor(result) : \"no data\";\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <>\n        <SectionTitle />\n        <FeedbackOptions handleIncrement={this.handleIncrement} />\n        <Statistics\n          countTotalFeedback={this.countTotalFeedback}\n          countPositiveFeedbackPercentage={this.countPositiveFeedbackPercentage}\n          good={this.state.good}\n          neutral={this.state.neutral}\n          bad={this.state.bad}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}